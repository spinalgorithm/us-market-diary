name: build-daily-jpx

on:
  schedule:
    - cron: "10 7 * * 1-5"   # 16:10 JST
    - cron: "00 10 * * 1-5"  # 19:00 JST 재시도
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: daily-jpx
  cancel-in-progress: true

jobs:
  jpx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas yfinance requests openai

      - name: Bootstrap JPX universe
        run: |
          python scripts/bootstrap_jpx_universe.py
          ls -l data || true

      - name: Fetch JPX toplists
        env:
          MIN_PRICE_JPY: "1000"
        run: |
          python fetch_jpx_toplists.py
          echo "BUNDLE_JPX=$(ls -d out_jpx/* | sort | tail -1)/bundle.json" >> $GITHUB_ENV
          echo "Bundle: ${BUNDLE_JPX:-not-found}"

      - name: Summarize with OpenAI (JP)
        env:
         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
         python summarize_with_openai_jp.py \
         --bundle "${{ env.BUNDLE_JPX }}" \
         --names data/jpx_names.csv \
         --out note_post_llm_jp.md \
         --model "gpt-5"

      - name: Publish to public/jpx/daily
        run: |
          mkdir -p public/jpx/daily
          BUNDLE="${{ env.BUNDLE_JPX }}"
          DATE=$(python -c "import json,sys;print(json.load(open('${BUNDLE}','r',encoding='utf-8'))['date'])")
          cp note_post_llm_jp.md public/jpx/daily/latest.md
          cp "${BUNDLE}"        public/jpx/daily/latest.json
          cp note_post_llm_jp.md "public/jpx/daily/${DATE}.md"
          cp "${BUNDLE}"         "public/jpx/daily/${DATE}.json"
          echo "REPORT_DATE=${DATE}" >> $GITHUB_ENV

      - name: Commit and push
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git fetch origin
          git pull --rebase origin "$GITHUB_REF_NAME" || true
          git add public/jpx/daily out_jpx data/jpx_tickers.txt data/jpx_names.csv note_post_llm_jp.md || true
          git commit -m "jpx daily: ${{ env.REPORT_DATE }}" || true
          git push origin HEAD:"$GITHUB_REF_NAME" || git push || true
