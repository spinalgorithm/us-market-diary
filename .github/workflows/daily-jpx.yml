name: daily-jpx

on:
  schedule:
    - cron: "10 7 * * 1-5"   # 16:10 JST/KST, 市場引け後
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: daily-jpx
  cancel-in-progress: true

jobs:
  jpx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir "openai>=1.50.0" pandas numpy requests yfinance tzdata

      - name: Build JP universe (names)
        run: |
          # 없으면 생성, 있으면 유지
          python scripts/bootstrap_jpx_universe.py || true

      - name: Enrich names with themes
        run: |
          # 신규 추가한 스크립트(수동 테마 매핑 포함)
          python scripts/make_jpx_names_with_themes.py

      - name: Fetch JP toplists (Top600 by JPY)
        env:
          MIN_PRICE_JPY: "1000"
        run: |
          python fetch_jpx_toplists.py
          echo "BUNDLE_JPX=$(ls -1 out_jpx/*/bundle.json | sort | tail -n 1)" >> $GITHUB_ENV
          test -f "${BUNDLE_JPX}"

      - name: Summarize with OpenAI (gpt-5-mini, JP)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-5-mini
        run: |
          python summarize_with_openai_jp.py \
            --bundle "${{ env.BUNDLE_JPX }}" \
            --names data/jpx_names.csv \
            --out note_post_llm_jp.md \
            --model "${OPENAI_MODEL}"

      - name: Publish to public/daily_jpx
        run: |
          DATE=$(python - <<'PY'
 
          import json,os,sys
           p=os.environ["BUNDLE_JPX"]
                print(json.load(open(p,encoding="utf-8"))["date"])
             PY)
             
          mkdir -p public/daily_jpx
          cp "${{ env.BUNDLE_JPX }}" "public/daily_jpx/${DATE}.json"
          cp note_post_llm_jp.md "public/daily_jpx/${DATE}.md"
          cp "${{ env.BUNDLE_JPX }}" "public/daily_jpx/latest.json"
          cp note_post_llm_jp.md "public/daily_jpx/latest.md"

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "JPX daily: $(date -u +'%Y-%m-%d')" || exit 0
          git pull --rebase origin "${GITHUB_REF_NAME}" || true
          git push origin "HEAD:${GITHUB_REF_NAME}"
