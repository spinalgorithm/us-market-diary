name: daily-jpx
on:
  schedule:
    - cron: "35 20 * * 1-5"   # JP 장 마감 후 KST 새벽에 맞게 조정
  workflow_dispatch:

permissions:
  contents: write

jobs:
  jpx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas yfinance requests lxml openai

      # JPX 유니버스/이름 자동 생성
      - name: Bootstrap JPX universe
        run: |
          python scripts/bootstrap_jpx_universe.py
          ls -l data/

      # Top600 등 번들 생성
      - name: Build JPX toplists
        env:
          MIN_PRICE_JPY: "1000"
        run: |
          python fetch_jpx_toplists.py
          echo "BUNDLE_JPX=$(ls -d out_jpx/* | sort | tail -1)/bundle.json" >> "$GITHUB_ENV"

      - name: Read bundle date
        run: |
          python - <<'PY' > __date.env
import json,os
p=os.environ["BUNDLE_JPX"]
d=json.load(open(p,encoding="utf-8"))
print("DATE="+d["date"])
PY
          cat __date.env >> "$GITHUB_ENV"

      - id: preflight
        name: Preflight size guard
        run: |
          python - <<'PY' > __pf.env
import json,os
d=json.load(open(os.environ["BUNDLE_JPX"],encoding="utf-8"))
n=len(d.get("lists",{}).get("universe_top600_by_dollar",[]))
print("skip_llm=" + ("1" if n<100 else "0"))
PY
          cat __pf.env >> "$GITHUB_OUTPUT"

      - name: Summarize with GPT-5 (JP)
        if: steps.preflight.outputs.skip_llm == '0'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-5
          OPENAI_MAX_OUTPUT_TOKENS: "8000"
          HEADER_PREFIX: "取引代金上位600日本株"
          MIN_PRICE_JPY: "1000"
        run: |
          python summarize_with_openai_jp.py --bundle "$BUNDLE_JPX" --out note_post_llm_jpx.md

      - name: Publish to public/jpx
        run: |
          mkdir -p public/jpx
          cp "$BUNDLE_JPX" "public/jpx/${DATE}.json"
          cp "$BUNDLE_JPX" public/jpx/latest.json
          if [ -f note_post_llm_jpx.md ]; then
            cp note_post_llm_jpx.md "public/jpx/${DATE}.md"
            cp note_post_llm_jpx.md public/jpx/latest.md
          fi

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git pull --rebase
          git add public/jpx data/*.csv data/*.txt out_jpx || true
          git commit -m "JPX daily: ${DATE}" || true
          git push
